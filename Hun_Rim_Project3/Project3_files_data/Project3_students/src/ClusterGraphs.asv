% Cluster 2D real-world graphs with spectral clustering and compare with k-means
% USI, ICS, Lugano
% Numerical Computing 

clear all;close all;
warning OFF;

addpath ../datasets
addpath ../datasets/Meshes

% load airfoil1.mat
% load barth.mat
% load grid2.mat
load 3elt.mat

% Specify the number of clusters
K = 4;
% Read graph
W   = Problem.A;
Pts = Problem.aux.coord;
n   = size(Pts,1);
% dummy var
dummy_map = ones(n,1);

figure;
spy(W)
title('Adjacency matrix')
%% 2.1) Create the Laplacian matrix and plot the graphs using the 2nd and 3rd eigenvectors

L = CreateLapl(W);

% Eigen-decomposition
L = sparse(L);
[eigvecs, eigvals] = eigs(L,3,'SA');
eig2 = eigvecs(:,2);
eig3 = eigvecs(:,3);
spec_coords = [eig2,eig3];


% Plot and compare
figure;
subplot(1,2,1);
gplot(W,Pts)
xlabel('Nodal coordinates')
subplot(1,2,2);
gplot(W,spec_coords);
xlabel('Eigenvector coordinates')

%% 2.2) Cluster each graph in K = 4 clusters with the spectral and the 
%      k-means method, and compare yourresults visually for each case.

% Modifying the adjacency matrix for spectral and K-means clustering

W_spectral = W;
W_kmeans = W;

spectralClusters = kmeans(spec_coords, K);

kmeansClusters = kmeans(Pts, K);

for i = 1:n
    for j = i+1:n
        if spectralClusters(i) ~= spectralCluster(j)
            W_spectral(i, j) = 0;
            W_spectral(j, i) = 0;
        end
        if kmeansClusters(i) ~= kmeansClusters(j)
            W_kmeans(i, j) = 0;
            W_kmeans(j, i) = 0;
        end
    end
end

% Visualize
figure;

for k = 1:K
    % cluster nodes
    cluster_nodes_spec = find(spectralClusters == k);
    cluster_nodes_k = find(kmeansClusters == k);

    % subgraphs
    sub_spec = W_spectral(cluster_nodes_spec, cluster_nodes_spec);
    sub_k = W_kmeans(cluster_nodes_k, cluster_nodes_k);
    
    % coordinates
    coords_spec = eigCoord(cluster_nodes_spec, :);
    coords_k = eigCoord(cluster_nodes_k, :);
    
    subplot(1,2,1);
    hold on;
    [x_spec, y_spec] = gplot(sub_spec, coords_spec);
    plot(x_spec, y_spec, 'Color', cmap(k, :), 'LineWidth', 2);

    subplot(1,2,2);
    hold on;
    [x_k, y_k] = gplot(sub_k, coords_k);
    plot(x_k, y_k, 'Color', cmap(k, :))





% Compare and visualize
figure;
subplot(1,2,1);
gplotmap(W,Pts,dummy_map)
title('TODO: Plot the spectral clusters')
subplot(1,2,2);
gplotmap(W,Pts,dummy_map)
title('TODO: Plot the K-means clusters')

%% 2.3) Calculate the number of nodes per cluster
[Spec_nodes,Kmeans_nodes] = ClusterMetrics(K,dummy_map,dummy_map);